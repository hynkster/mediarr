services:
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    network_mode: "host"
    volumes:
      - ${MEDIARR_CONFIG}/jellyfin:/config
      - ${MEDIARR_CACHE}:/cache
      - ${NAS_MOVIES}:/media/movies:ro
      - ${NAS_SHOWS}:/media/shows:ro
      - ${NAS_DOKUS}:/media/dokus:ro
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - JELLYFIN_FFmpeg__EnableHardwareEncoding=true
      - JELLYFIN_FFmpeg__EnableVAAPI=true
      - JELLYFIN_FFmpeg__VAAPIDevice=/dev/dri/renderD128
      - JELLYFIN_FFmpeg__EncoderThreadCount=4
      - JELLYFIN_FFmpeg__HardwareDecodingCodecs=["h264"]
    devices:
      - /dev/dri/card1:/dev/dri/card1
      - /dev/dri/renderD128:/dev/dri/renderD128
    group_add:
      - "989"
      - "985"
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8096/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MEDIARR_CONFIG}/sonarr:/config
      - ${NAS_SHOWS}:/tv/shows
      - ${NAS_DOKUS}:/tv/dokus
      - ${NAS_DOWNLOADS}:/downloads
    ports:
      - "8989:8989"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8989/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${MEDIARR_CONFIG}/radarr:/config
      - ${NAS_MOVIES}:/movies
      - ${NAS_DOWNLOADS}:/downloads
    ports:
      - "7878:7878"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7878/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - DOCKER_MODS=ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
    volumes:
      - ${MEDIARR_CONFIG}/qbittorrent:/config
      - ${NAS_DOWNLOADS}:/downloads
    ports:
      - "${QB_PORT}:8080"
      - "${QB_INCOMING_PORT}:6881"
      - "${QB_INCOMING_PORT}:6881/udp"
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /opt/mediarr/config/prowlarr:/config
    ports:
      - "${PROWLARR_PORT}:9696"
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - TZ=Europe/Vienna
      - CAPTCHA_SOLVER=none
    ports:
      - "8191:8191"
    restart: unless-stopped

  unpackerr:
    image: ghcr.io/unpackerr/unpackerr:latest
    container_name: unpackerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UN_SONARR_0_URL=http://sonarr:8989
<<<<<<< HEAD
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
=======
      - UN_SONARR_0_API_KEY=
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=
>>>>>>> 05f87f6f746a7a1759a1a58b57066c0ca458f934
      - UN_PATHS_0=/downloads
    volumes:
      - ${NAS_DOWNLOADS}:/downloads
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
